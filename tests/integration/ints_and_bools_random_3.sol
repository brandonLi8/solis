# Copyright Â© 2022-2023 Brandon Li. All rights reserved.

##
Random test of a Solis program that uses ints, bools, and all the operators that are associated with them.
NOTE: this file was auto-generated with the `ints_and_bools_random.py` script.
##

843;
-(let a1: int = -((let b1: int = -(790)) % (-(b1))));
-((a1) * ((-(let c1: int = -(a1))) % (-((-(let d1: int = -(b1))) * (-(d1))))));
((-(let e1: int = b1)) - (-((-(e1)) * (-(c1))))) + (-(let f1: int = a1));
c1;
e1;
(-(b1)) + (a1);
-(let g1: int = -(a1));
c1;
g1;
-(a1);
e1;
(a1) + (99);
-(206);
612;
-(908);
-((-(b1)) % (-(525)));
d1;
let h1: int = let i1: int = -(g1);
-(let j1: int = let k1: int = -(998));
-(146);
a1;
f1;
a1;
-(k1);
(-(d1)) % (-(e1));
520;
let l1: int = -(let m1: int = -(368));
-(let n1: int = let o1: int = -(let p1: int = -(g1)));
-(let q1: int = let r1: int = (g1) % (-(e1)));
-(((q1) + (-((306) * (c1)))) + ((-(a1)) * (let s1: int = let t1: int = c1)));
let u1: int = -(r1);
-(231);
let v1: int = (-(s1)) + (108);
-(p1);
-((a1) - (h1));
let w1: int = -(((-(606)) * (-((g1) / (b1)))) - (-(let x1: int = u1)));
-((let a2: int = -(k1)) - (-((b1) - (let b2: int = a1))));
859;
(n1) % (-(l1));
-((let c2: int = 212) * (let d2: int = let e2: int = -(673)));
-(a2);
(a2) - (f1);
-(t1);
b2;
15;
-((-(u1)) * (a1));
-(r1);
-(992);
347;
((d2) - (-(q1))) + (-(105));
-(q1);
104;
(-(700)) - (-(f1));
-(x1);
-(983);
c1;
w1;
u1;
-(u1);
i1;
j1;
-(let f2: int = -(let g2: int = m1));
-(j1);
s1;
104;
(f2) / (-(e1));
-(m1);
-(g1);
(let h2: int = 736) % (-((-(438)) + (f2)));
-(t1);
354;
o1;
b1;
let i2: int = k1;
let j2: int = s1;
j1;
d2;
-(698);
(a1) + ((-((-(e1)) - ((-(c1)) - (-(let k2: int = (669) / (let l2: int = m1)))))) * (let m2: int = 484));
-(e1);
-((-(s1)) + (e1));
b1;
-(1);
-((j1) % (-(let n2: int = -(599))));
-(726);
(956) - (-(f1));
-(g1);
-(let o2: int = -(i2));
let p2: int = -(n1);
u1;
(-(f1)) * (b2);
-(w1);
146;
-(let q2: int = -((-((848) + (let r2: int = h1))) + ((-(let s2: int = -(u1))) * (-(h2)))));
g1;
-(x1);
-((c1) - (-(q1)));
-(let t2: int = 342);
-((-(let u2: int = let v2: int = -((-(w1)) + (-((-(l1)) - (-(t1))))))) + (-(o1)));
q2;
-(w1);
-(w1);
-((let w2: int = -(let x2: int = -(let a3: int = let b3: int = let c3: int = let d3: int = -(let e3: int = -(o2))))) * (-(d2)));
b1;
157;
r1;
e3;
i1;
r1;
-(i2);
let f3: int = -(i2);
let g3: int = -(let h3: int = -(e3));
-(u2);
t2;
f2;
-(m1);
-((-(e2)) - (-((169) + (let i3: int = -((u1) / (let j3: int = (a3) + (-(v1))))))));
(27) - (-(e1));
-(r1);
h1;
-(337);
-(t2);
-(let k3: int = n2);
-(let l3: int = b2);
h3;
q2;
-((-(x2)) - (-(r2)));
u1;
-(v1);
h1;
-(k1);
let m3: int = -(m1);
l3;
387;
-(v1);
-(let n3: int = -(let o3: int = -(r2)));
(730) / (-(let p3: int = 52));
-(let q3: int = -((let r3: int = -((-(943)) / ((-(let s3: int = 854)) - (-(j1))))) * (let t3: int = -(t2))));
(-(let u3: int = u2)) * (t3);
(x1) / ((-((128) - (l1))) + (-(q1)));
l2;
w1;
o1;
(49) - (q3);
-((-(p3)) - (d1));
-(c1);
328;
-(691);
-(let v3: int = -((b3) + (c2)));
-(let w3: int = -(424));
r1;
i3;
q2;
u3;
-(let x3: int = x2);
let a4: int = o2;
-((-(a2)) * (-(a2)));
-(let b4: int = n1);
-((-(863)) + (-(e1)));
c2;
98;
(-(b4)) % (d2);
(-(l1)) * (-(let c4: int = ((-(let d4: int = k2)) + (-(t2))) * (-(63))));
h1;
h2;
-(q2);
k2;
-(u1);
let e4: int = let f4: int = h1;
-(414);
134;
-(e4);
b1;
d1;
-(u1);
-(i3);
r1;
-(95);
(-(a2)) * (q2);
e1;
d2;
f4;
(v2) + (-((-((let g4: int = let h4: int = -(b2)) / ((-(i2)) - (-(d1))))) % (-(692))));
-(e4);
-((-(c4)) * (-(j2)));
-(17);
(b2) - (-(a4));
q2;
-(o2);
k1;
l1;
-(e1);
-(442);
l3;
(-(let i4: int = -(k3))) / (-(let j4: int = -(816)));
-(let k4: int = (-(let l4: int = -(p1))) - (x2));
let m4: int = -(t3);
-(let n4: int = 425);
-(k3);
b1 + a1 + c1 + d1 + e1 + f1 + g1 + i1 + h1 + k1 + j1 + m1 + l1 + p1 + o1 + n1 + r1 + q1 + t1 + s1 + u1 + v1 + x1 + w1 + a2 + b2 + c2 + e2 + d2 + g2 + f2 + h2 + i2 + j2 + l2 + k2 + m2 + n2 + o2 + p2 + r2 + s2 + q2 + t2 + v2 + u2 + e3 + d3 + c3 + b3 + a3 + x2 + w2 + f3 + h3 + g3 + j3 + i3 + k3 + l3 + m3 + o3 + n3 + p3 + s3 + r3 + t3 + q3 + u3 + v3 + w3 + x3 + a4 + b4 + d4 + c4 + f4 + e4 + h4 + g4 + i4 + j4 + l4 + k4 + m4 + n4